version: '3'

services:
  plugins:
    build:
      context: ./wp-react-blocks-plugin/
    volumes:
      - ./wp-react-blocks-plugin/blocks/build:/tmp/plugins
    restart: "no"

  ui:
    build:
      context: ./
      dockerfile: ./ui/Dockerfile.Production
      args:
        ENVIRONMENT: production
    volumes:
      - ui:/var/www/ui
    restart: "no"

  wordpress:
    image: library/wordpress:5.9.3-fpm-alpine
    hostname: wp.tasai.org
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - plugins
      - mysql
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress-production
      WORDPRESS_DB_NAME: wordpress
    volumes:
      - ./data/wordpress:/var/www/html
      - ./wp-theme:/var/www/html/wp-content/themes/wp-react-theme
      - ./wp-react-blocks-plugin:/var/www/html/wp-content/plugins/wp-react-blocks-plugin
      - ./wp-content:/var/www/html/wp-content
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
      - ./wordpress/php.ini-development:/usr/local/etc/php/php.ini
    networks:
      - backend  #for dev purpose we use a bridged network
    logging:
      driver: journald

  #  mongo:
  #    image: mongo:4.2.2-bionic
  #    container_name: mongo
  #    restart: unless-stopped
  #    hostname: mongo
  #    environment:
  #      - MONGO_DATA=/data/db
  #      - MONGO_INITDB_ROOT_USERNAME=root
  #      - MONGO_INITDB_ROOT_PASSWORD=admin123
  #    volumes:
  #      - ./data/mongo:/data/db
  #      - ./mongo/init:/docker-entrypoint-initdb.d
  #      - ./log/mongo:/srv/logs
  #    stop_grace_period: 5m
  #    networks:
  #      - frontend
  #      - backend
  #    ports:
  #      - 27018:27017

  #  postgres:
  #    build:
  #      context: ./postgres
  #    volumes:
  #      - ./data/postgresql:/var/lib/postgresql/data
  #    networks:
  #      - frontend
  #      - backend
  #    ports:
  #      - 5433:5432
  #    env_file:
  #      - env
  #    restart: unless-stopped
  #    logging:
  #      driver: journald

  #  tasai:
  #    build:
  #      context: ./api
  #      dockerfile: Dockerfile
  #    networks:
  #      - backend
  #    depends_on:
  #      - postgres
  #      - mongo
  #    logging:
  #      driver: journald

  metabase:
    image: metabase/metabase:v0.44.0
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase
      MB_DB_PORT: 5432
      MB_DB_USER: metabase
      MB_DB_PASS: 12345678
      MB_DB_HOST: host.docker.internal
    networks:
    - backend
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/wordpress_prod.conf:/etc/nginx/conf.d/wordpress.conf:rw
      - ./nginx/.htpasswd-dashboard.tasai.org:/etc/nginx/conf.d/.htpasswd-dashboard.tasai.org:ro
      - /var/log/tasai:/usr/share/nginx/tasai:ro
      - ./nginx/logs.conf:/etc/nginx/conf.d/logs.conf:ro
      - ./nginx/metabase_prod.conf:/etc/nginx/conf.d/metabase_prod.conf:ro
      - ./nginx/ui_prod.conf:/etc/nginx/conf.d/ui.conf:rw
      - ./data/wordpress:/var/www/html:ro
      - ./wp-content:/var/www/html/wp-content:ro
      - ./wp-react-blocks-plugin:/var/www/html/wp-content/plugins/wp-react-blocks-plugin:ro
      - ui:/var/www/ui:rw
    depends_on:
      - wordpress
      - metabase
    networks:
      - frontend
      - backend
    ports:
      - 8060:80
  mysql:
    image: mariadb
    volumes:
      - ./data/mysql:/var/lib/mysql
    restart: always
    ports:
      - 3308:3306
    environment:
      MYSQL_ROOT_PASSWORD: somewordpress
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress-production
    networks:
      - backend #for dev purpose we use a bridged network

networks:
  frontend:
    driver: bridge
  backend:

volumes:
  ui:
